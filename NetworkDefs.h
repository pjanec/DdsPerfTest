/****************************************************************

  Generated by Eclipse Cyclone DDS IDL to C Translator
  File name: NetworkDefs.h
  Source: D:\Work\DdsPerfTest\NetworkDefs.idl
  Cyclone DDS: V0.11.0

*****************************************************************/
#ifndef DDSC_NETWORKDEFS_H
#define DDSC_NETWORKDEFS_H

#include "dds/ddsc/dds_public_impl.h"

#ifdef __cplusplus
extern "C" {
#endif

typedef struct Net_AppId
{
  char * ComputerName;
  int32_t ProcessId;
} Net_AppId;

extern const dds_topic_descriptor_t Net_AppId_desc;

#define Net_AppId__alloc() \
((Net_AppId*) dds_alloc (sizeof (Net_AppId)));

#define Net_AppId_free(d,o) \
dds_sample_free ((d), &Net_AppId_desc, (o))

#ifndef DDS_SEQUENCE_LONG_DEFINED
#define DDS_SEQUENCE_LONG_DEFINED
typedef struct dds_sequence_long
{
  uint32_t _maximum;
  uint32_t _length;
  int32_t *_buffer;
  bool _release;
} dds_sequence_long;

#define dds_sequence_long__alloc() \
((dds_sequence_long*) dds_alloc (sizeof (dds_sequence_long)));

#define dds_sequence_long_allocbuf(l) \
((int32_t *) dds_alloc ((l) * sizeof (int32_t)))
#endif /* DDS_SEQUENCE_LONG_DEFINED */

#ifndef DDS_SEQUENCE_LONG_DEFINED
#define DDS_SEQUENCE_LONG_DEFINED
typedef struct dds_sequence_long
{
  uint32_t _maximum;
  uint32_t _length;
  int32_t *_buffer;
  bool _release;
} dds_sequence_long;

#define dds_sequence_long__alloc() \
((dds_sequence_long*) dds_alloc (sizeof (dds_sequence_long)));

#define dds_sequence_long_allocbuf(l) \
((int32_t *) dds_alloc ((l) * sizeof (int32_t)))
#endif /* DDS_SEQUENCE_LONG_DEFINED */

typedef struct Net_MsgSpec
{
  int32_t Disabled;
  bool Opened;
  char * Name;
  int32_t Rate;
  int32_t Size;
  int32_t DomainId;
  char * PartitionName;
  dds_sequence_long SubsCnt;
  bool AllSubsDisabled;
  dds_sequence_long PublCnt;
  bool AllPublDisabled;
} Net_MsgSpec;

#ifndef DDS_SEQUENCE_NET_APPID_DEFINED
#define DDS_SEQUENCE_NET_APPID_DEFINED
typedef struct dds_sequence_Net_AppId
{
  uint32_t _maximum;
  uint32_t _length;
  struct Net_AppId *_buffer;
  bool _release;
} dds_sequence_Net_AppId;

#define dds_sequence_Net_AppId__alloc() \
((dds_sequence_Net_AppId*) dds_alloc (sizeof (dds_sequence_Net_AppId)));

#define dds_sequence_Net_AppId_allocbuf(l) \
((struct Net_AppId *) dds_alloc ((l) * sizeof (struct Net_AppId)))
#endif /* DDS_SEQUENCE_NET_APPID_DEFINED */

#ifndef DDS_SEQUENCE_NET_MSGSPEC_DEFINED
#define DDS_SEQUENCE_NET_MSGSPEC_DEFINED
typedef struct dds_sequence_Net_MsgSpec
{
  uint32_t _maximum;
  uint32_t _length;
  struct Net_MsgSpec *_buffer;
  bool _release;
} dds_sequence_Net_MsgSpec;

#define dds_sequence_Net_MsgSpec__alloc() \
((dds_sequence_Net_MsgSpec*) dds_alloc (sizeof (dds_sequence_Net_MsgSpec)));

#define dds_sequence_Net_MsgSpec_allocbuf(l) \
((struct Net_MsgSpec *) dds_alloc ((l) * sizeof (struct Net_MsgSpec)))
#endif /* DDS_SEQUENCE_NET_MSGSPEC_DEFINED */

typedef struct Net_MasterSettings
{
  struct Net_AppId Sender;
  bool Disabled;
  dds_sequence_Net_AppId Apps;
  dds_sequence_Net_MsgSpec Msgs;
} Net_MasterSettings;

extern const dds_topic_descriptor_t Net_MasterSettings_desc;

#define Net_MasterSettings__alloc() \
((Net_MasterSettings*) dds_alloc (sizeof (Net_MasterSettings)));

#define Net_MasterSettings_free(d,o) \
dds_sample_free ((d), &Net_MasterSettings_desc, (o))

typedef struct Net_SubsStats
{
  int32_t AppIndex;
  char * MsgClass;
  int32_t InAppIndex;
  int32_t DomainId;
  char * PartitionName;
  int32_t Received;
  int32_t Rate;
  int32_t Lost;
} Net_SubsStats;

extern const dds_topic_descriptor_t Net_SubsStats_desc;

#define Net_SubsStats__alloc() \
((Net_SubsStats*) dds_alloc (sizeof (Net_SubsStats)));

#define Net_SubsStats_free(d,o) \
dds_sample_free ((d), &Net_SubsStats_desc, (o))

#ifndef DDS_SEQUENCE_OCTET_DEFINED
#define DDS_SEQUENCE_OCTET_DEFINED
typedef struct dds_sequence_octet
{
  uint32_t _maximum;
  uint32_t _length;
  uint8_t *_buffer;
  bool _release;
} dds_sequence_octet;

#define dds_sequence_octet__alloc() \
((dds_sequence_octet*) dds_alloc (sizeof (dds_sequence_octet)));

#define dds_sequence_octet_allocbuf(l) \
((uint8_t *) dds_alloc ((l) * sizeof (uint8_t)))
#endif /* DDS_SEQUENCE_OCTET_DEFINED */

typedef struct Net_TestMsg
{
  int32_t AppId;
  int32_t InAppIndex;
  int32_t SeqNum;
  dds_sequence_octet Payload;
} Net_TestMsg;

extern const dds_topic_descriptor_t Net_TestMsg_desc;

#define Net_TestMsg__alloc() \
((Net_TestMsg*) dds_alloc (sizeof (Net_TestMsg)));

#define Net_TestMsg_free(d,o) \
dds_sample_free ((d), &Net_TestMsg_desc, (o))

typedef struct Net_Command
{
  char * Type;
  char * Data;
} Net_Command;

extern const dds_topic_descriptor_t Net_Command_desc;

#define Net_Command__alloc() \
((Net_Command*) dds_alloc (sizeof (Net_Command)));

#define Net_Command_free(d,o) \
dds_sample_free ((d), &Net_Command_desc, (o))

typedef struct Net_SystemMonitorSample
{
  char * computerName;
  char * ipAddress;
  int64_t timestampUtc;
  float cpuUsagePercent;
  float memoryUsageMb;
  float networkSentMbps;
  float networkReceivedMbps;
} Net_SystemMonitorSample;

extern const dds_topic_descriptor_t Net_SystemMonitorSample_desc;

#define Net_SystemMonitorSample__alloc() \
((Net_SystemMonitorSample*) dds_alloc (sizeof (Net_SystemMonitorSample)));

#define Net_SystemMonitorSample_free(d,o) \
dds_sample_free ((d), &Net_SystemMonitorSample_desc, (o))

#ifdef __cplusplus
}
#endif

#endif /* DDSC_NETWORKDEFS_H */
